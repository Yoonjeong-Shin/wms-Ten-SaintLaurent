<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sh.model.dao.InboundMapper">
<!--    <resultMap id="inbTBMap" type="com.sh.model.dto.InboundDto">-->
<!--        <id property="inbIdPk" column="INB_PK"/>-->
<!--        <result property="selIdPk" column="SEL_PK"/>-->
<!--        <result property="facIdPk" column="FAC_PK"/>-->
<!--        <result property="whsIdPk" column="WHS_PK"/>-->
<!--        <result property="inbItemIdPk" column="INB_ITEM_PK"/>-->
<!--        <result property="inbItemCatPk" column="INB_ITEM_CAT_PK"/>-->
<!--        <result property="inbItemNM" column="INB_ITEM_NM"/>-->
<!--        <result property="inbItemVol" column="INB_ITEM_VOL"/>-->
<!--        <result property="inbItemPrice" column="INB_ITEM_PRICE"/>-->
<!--        <result property="inbItemCnt" column="INB_ITEM_CNT"/>-->
<!--        <result property="inbItemExpirationDt" column="INB_ITEM_EXPIRATION_DT"/>-->
<!--    </resultMap>-->

    <!-- 입고 승인 - 빈 로케이트 찾기 -->
    <!-- LOCATE_TB에서 LOCATE_ITEM_CNT 찾기 -->
    <select id="findEmptyLocate" resultType="int">
        SELECT
            COUNT(*)
        FROM
            LOCATE_TB
        WHERE
            LOCATE_ITEM_CNT = 0;
    </select>

    <!-- 입고 승인 -->
    <!-- JSON 데이터를 dto로 바꿔서 INB_TB에 넣기 -->
    <insert id="insertInbToINB" useGeneratedKeys="true" keyProperty="INB_ID_PK">
        INSERT INTO INB_TB
        values (
            null, (SELECT SEL_PK FROM SEL_TB WHERE SEL_NM = #{selNm}),
            (SELECT FAC_PK FROM FAC_TB WHERE FAC_NM = #{facNm}),
            (SELECT WHS_PK FROM WHS_TB WHERE WHS_NM = #{whsNm}),
            (SELECT ITEM_PK FROM ITEM_TB WHERE ITEM_NM = #{itemNm}),
            (SELECT ITEM_CAT_PK FROM ITEM_CAT_TB WHERE ITEM_CAT_NM = #{itemCatNm}),
            #{inbItemNm}, #{inbItemVol}, #{inbItemPrice},#{inbItemCnt}, #{inbItemExpirationDt}
        )
    </insert>

    <!-- 입고 정보 조회 -->
    <!-- INB_TB의 PK로 한 데이터의 모든 정보를 조회, 입고 승인과 입고 확정 때 쓰인다 -->
    <select id="findByInbId" resultType="InboundDto">
        SELECT *
        FROM INB_TB
        where INB_PK = #{inbPk}
    </select>

    <!-- 입고 승인 -->
    <!-- 재고 관리의 일인지 확인, state가 1인 정상 제품은 item_tb와 item_detail_tb에 insert -->
    <insert id="insertInbToItemTb" useGeneratedKeys="true" keyProperty="ITEM_PK">
        INSERT INTO ITEM_TB
        values (
        null, (SELECT INB_ITEM_NM FROM INB_TB WHERE INB_ITEM_PK = #{inbItemPk}),
        (SELECT INB_ITEM_VOL FROM INB_TB WHERE INB_ITEM_PK = #{inbItemPk}),
        (SELECT ITEM_CAT_PK FROM ITEM_CAT_TB WHERE ITEM_CAT_PK = #{itemCatPk})
        )
    </insert>
    <insert id="insertInbToItemDetailTb" useGeneratedKeys="true" keyProperty="ITEM_DETAIL_PK">
        INSERT INTO ITEM_DETAIL_TB
        values (
        null, #{itemDetailSerialNum},
        (SELECT ITEM_PK FROM ITEM_TB WHERE ITEM_PK = #{itemPk}),
        #{ITEM_DETAIL_STATUS},
        (SELECT LOCATE_PK FROM LOCATE_TB WHERE LOCATE_PK = #{locatePk}),
        (SELECT INB_ITEM_EXPIRATION_DT FROM INB_TB WHERE INB_ITEM_PK = #{inbItemPk})
        )
    </insert>

    <!-- 입고 검수 -->
    <!-- state가 2,3인 불량품은 gbg_detail_tb에 insert -->
    <insert id="insertInbToGbgDetail" useGeneratedKeys="true" keyProperty="ITEM_DETAIL_SERIAL_NUM">
        INSERT INTO
            GBG_DETAIL_TB
        values (
        null, (SELECT ITEM_PK FROM ITEM_TB WHERE ITEM_PK = #{itemPk}), #{itemState}, #{gbgSerialNum}
        )
    </insert>

    <!-- gbg_detail_tb에 insert한 불량품은 item_detail_tb에서 delete -->
    <delete id="deleteItemDetail">
        DELETE FROM ITEM_DETAIL_TB
        WHERE (SELECT ITEM_PK FROM GBG_DETAIL_TB WHERE ITEM_PK = #{itemPk})
    </delete>

    <!-- item_tb에는 재고 수량이 없고, inb_tb는 입고지시서이므로 수량을 update하면 안될 것 같다. 어떻게 구현해야할지 확인 필요-->
    <!-- 같은 상품이 기존에 창고에서 재고가 몇이었는지 ITEM_DETAIL_TB의 같은 화장품 ID를 count하여 수량 구하기 (int) - 재고 조회 -->
    <!-- 같은 상품이 또 들어오면 3번으로 얻은 값과 json에서 얻은 count값을 더해서 재고 수량 update -->
    <!-- state가 2,3인 불량품은 위에서 더하기 대신 빼기로 재고 수량 update -->
</mapper>