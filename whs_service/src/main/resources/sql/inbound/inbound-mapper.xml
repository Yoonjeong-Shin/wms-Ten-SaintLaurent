<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sh.model.dao.InboundMapper">
    <!-- 입고 승인 - 빈 로케이트 찾기 -->
    <!-- LOCATE_TB에서 LOCATE_ITEM_CNT 찾기 -->
    <select id="findEmptyLocate" resultType="int">
        SELECT
            COUNT(*)
        FROM
            LOCATE_TB
        WHERE
            LOCATE_ITEM_CNT = 0;
    </select>

    <!-- 입고 승인 -->
    <!-- JSON 데이터를 dto로 바꿔서 INB_TB에 넣기 -->
    <insert id="insertInbToINB" useGeneratedKeys="true">
        INSERT INTO INB_TB
        values (
            null, (SELECT SEL_PK FROM SEL_TB WHERE SEL_NM = #{selNm}),
            (SELECT FAC_PK FROM FAC_TB WHERE FAC_NM = #{facNm}),
            (SELECT WHS_PK FROM WHS_TB WHERE WHS_NM =#{whsNm}),
            (SELECT ITEM_PK FROM ITEM_TB WHERE ITEM_NM = #{itemNm}),
            (SELECT ITEM_CAT_PK FROM ITEM_CAT_TB WHERE ITEM_CAT_NM = #{itemCatNm}),
            #{itemNm}, #{inbItemVol}, #{inbItemPrice},#{inbItemCnt}, #{inbItemExpirationDt}
        )
    </insert>
    <select id="chckSeller" resultType="int">
        SELECT COUNT(*)
            FROM SEL_TB
        WHERE SEL_NM = #{selNm}
    </select>

    <insert id="insertSeller">
        INSERT INTO SEL_TB
        values (
            null,
            #{selNm},
            "temp",
            1
        )
    </insert>
    <select id="chackFac" resultType="int">
        SELECT COUNT(*)
        FROM FAC_TB
        WHERE FAC_NM = #{facNm}
    </select>
    <insert id="insertFac">
        INSERT INTO FAC_TB
        values (
        null,
        #{facNm},
        1
        )
    </insert>
    <select id="checkCat" resultType="int">
        SELECT COUNT(*)
        FROM ITEM_CAT_TB
        WHERE ITEM_CAT_NM = #{catNm}
    </select>
    <insert id="insertCat">
        INSERT INTO ITEM_CAT_TB
        values (
        null,
        #{catNm}
        )
    </insert>
    <!-- 입고 정보 조회 -->
    <!-- INB_TB의 PK로 한 데이터의 모든 정보를 조회, 입고 승인과 입고 확정 때 쓰인다 -->

    <select id="findByInbId" resultType="InboundDto">
        SELECT *
        FROM INB_TB
        where INB_PK = #{inbPk}
    </select>

    <!-- 입고 승인 -->
    <!-- 재고 관리의 일인지 확인, JSON에서 얻은 state가 1인 정상 제품은 ITEM_TB와 ITEM_DETAIL_TB에 insert -->
    <insert id="insertInbToItemTb" useGeneratedKeys="true" keyProperty="ITEM_PK">
        INSERT INTO ITEM_TB
        values (
        null, (SELECT INB_ITEM_NM FROM INB_TB WHERE INB_ITEM_PK = #{inbItemPk}),
        (SELECT INB_ITEM_VOL FROM INB_TB WHERE INB_ITEM_PK = #{inbItemPk}),
        (SELECT ITEM_CAT_PK FROM ITEM_CAT_TB WHERE ITEM_CAT_PK = #{itemCatPk})
        )
    </insert>
    <insert id="insertInbToItemDetailTb" useGeneratedKeys="true" keyProperty="ITEM_DETAIL_PK">
        INSERT INTO ITEM_DETAIL_TB
        values (
        null, #{itemDetailSerialNum},
        (SELECT ITEM_PK FROM ITEM_TB WHERE ITEM_PK = #{itemPk}),
        #{ITEM_DETAIL_STATUS},
        (SELECT LOCATE_PK FROM LOCATE_TB WHERE LOCATE_PK = #{locatePk}),
        (SELECT INB_ITEM_EXPIRATION_DT FROM INB_TB WHERE INB_ITEM_PK = #{inbItemPk})

        )
    </insert>

    <!-- 입고 검수 -->
    <!-- JSON에서 얻은 state가 2,3인 불량품은 GBG_DETAIL_TB에 insert -->
    <insert id="insertInbToGbgDetail" useGeneratedKeys="true" keyProperty="ITEM_DETAIL_SERIAL_NUM">
        INSERT INTO
            GBG_DETAIL_TB
        values (
        null, (SELECT ITEM_PK FROM ITEM_TB WHERE ITEM_PK = #{itemPk}), #{itemState}, #{gbgSerialNum}
        )
    </insert>

    <!-- GBG_DETAIL_TB에 insert한 불량품은 ITEM_DETAIL_TB에서 delete -->
    <delete id="deleteItemDetail">

        DELETE FROM ITEM_DETAIL_TB
        WHERE (SELECT ITEM_PK FROM GBG_DETAIL_TB WHERE ITEM_PK = #{itemPk})
    </delete>

    <!-- 재고에 있는 상품이 또 들어오면 재고 수량 더하기 update -->
    <!-- INB_TB에서 수량 가져오기 -->
    <select id="getItemCnt" parameterType="int" resultType="int">
        select INB_ITEM_CNT
        from INB_TB
        where INB_ITEM_PK = #{inbItemPk}
    </select>
    <!-- ITEM_TB의 수량에 위의 값 더하기 -->
    <update id="updateItemCntWithSum" parameterType="map">
        update ITEM_TB
        set ITEM_CNT = ITEM_CNT + #{inbItemCnt}
        where ITEM_PK = #{itemPk}
    </update>

    <!-- ITEM_DETAIL_TB에서 state가 2,3인 불량품이 들어오면 재고 수량 빼기 update -->
    <!-- ITEM_DETAIL_TB에서 상태가 불량품만 count -->
    <select id="getItemDetailState" resultType="int">
        select count(*)
        from ITEM_DETAIL_TB
        where ITEM_DETAIL_STATUS = 2 or ITEM_DETAIL_STATUS = 3
    </select>
    <!-- ITEM_DETAIL_TB의 pk와 같은 ITEM_TB의 수량에 위의 값 빼기 -->
    <update id="updateItemCntWithMinus" parameterType="map">
        update ITEM_TB
        set ITEM_CNT = <![CDATA[
            case
                when ITEM_CNT - #{faultyItemCnt} < 0 then 0
                else ITEM_CNT - #{faultyItemCnt}
            end
        ]]>
        where ITEM_PK = (select ITEM_DETAIL_PK from ITEM_DETAIL_TB where ITEM_DETAIL_PK = #{itemDetailPk})
    </update>
</mapper>